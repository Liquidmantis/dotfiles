# using set abbreviation for set-option
# using setw abbreviation for set-window-option
# using bind abbreviation for bind-key

# initial base options
unbind C-b
set -g prefix C-s
bind -r C-s send-prefix
bind r source-file ~/.tmux.conf \; display-message "Reloaded tmux config"

set -g mouse off # this is to enforce 'proper' tmux usage
set -g mode-keys vi
set -g default-terminal "screen-256color"
set -g escape-time 0 # get rid of annoying Esc delay
set -g base-index 1 # make windows start at 1
setw -g pane-base-index 1 # make panes start at 1
setw -g monitor-activity on
set -g visual-activity on

# main tmux keybindings
bind \\ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind h select-pane -L 
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r H resize-pane -L 5
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 5
bind b break-pane -d

# the below sorcery came from
# https://github.com/christoomey/vim-tmux-navigator#installation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# modify existing bindings
bind -r n select-window -t:+1 # make default next window repeatable
bind -r p select-window -t:-1 # make default prev window repeatable
bind c new-window -c '#{pane_current_path}' # make new window use current path

# theme
source ~/.config/tmux/theme.conf # symlink to actual theme file
