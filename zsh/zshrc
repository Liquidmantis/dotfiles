if [[ $(whoami) == "will.ernst" ]]; then
  export WORK_COMPUTER=true
fi

export CPATH="/opt/homebrew/include"
export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
export PATH="/opt/homebrew/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"
export PATH="$HOME/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="/opt/homebrew/opt/ruby/bin:$PATH"
export PATH="/opt/homebrew/lib/ruby/gems/3.1.0/bin:$PATH"
export PATH="$PATH:/Users/liquid/.cargo/bin" 
export PATH="$PATH:$(go env GOPATH)/bin"
export GOBIN="$HOME/go/bin"
export HISTORY_SUBSTRING_SEARCH_FUZZY=true
export LIBRARY_PATH="/opt/homebrew/lib"
export ZK_NOTEBOOK_DIR="$HOME/notes" # zk-nvim notebook root
export EDITOR="nvim"
export LANG="en_US.UTF-8"

if [[ $WORK_COMPUTER ]] then
  export HCLOUD_CONFIG_PATH="${HOME}/.config" ### config path
  export HCLOUD_CLOUD_SRE_PATH="${HOME}/git-work/cloud-sre"
  export PATH="$HOME/git-work/cloud-sre/bin:$PATH"
fi

brewprefix=$(brew --prefix)
if [[ $(uname) == "Linux" ]] then
  # TODO: find out if `brew --prefix` works properly on Linux.
  eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
  brewshare="/home/linuxbrew/.linuxbrew/share"
  brewetc="/home/linuxbrew/.linuxbrew/etc"
else
  brewshare="$brewprefix/share"
  brewetc="$brewprefix/etc"
fi

source $brewshare/zsh-history-substring-search/zsh-history-substring-search.zsh
source $brewshare/zsh-abbr/zsh-abbr.zsh
source ${HOME}/.config/zsh/aliases.zsh
source ${HOME}/.config/zsh/functions.zsh

# lots of good info on completion stuff here:
# https://thevaluable.dev/zsh-completion-guide-examples/
fpath=($brewshare/zsh-completions $fpath)
fpath=($brewshare/zsh/site-functions $fpath)
fpath=($brewshare/zsh-abbr $fpath)

# make zsh-syntax-highlighting work with abbr
ZSH_HIGHLIGHT_HIGHLIGHTERS+=(main regexp)
typeset -A ZSH_HIGHLIGHT_REGEXP
ZSH_HIGHLIGHT_REGEXP+=('^[[:blank:][:space:]]*('${(j:|:)${(Qk)ABBR_REGULAR_USER_ABBREVIATIONS}}')$' fg=blue,bold)
ZSH_HIGHLIGHT_REGEXP+=('[[:<:]]('${(j:|:)${(Qk)ABBR_GLOBAL_USER_ABBREVIATIONS}}')$' fg=blue,bold)

zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}' # case-insensitive completion
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS} # add coloring to completion list
zstyle ':completion:*' menu no # don't show completion menu
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
autoload -Uz compinit && compinit -i

source ${HOME}/.config/zsh/plugins/fzf-tab/fzf-tab.plugin.zsh
source $brewshare/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source $brewshare/zsh-autosuggestions/zsh-autosuggestions.zsh

# add tab expansion of aliases
# zstyle ':completion:*' completer _complete _ignored z
# zstyle ':completion:*' regular true

export STARSHIP_CONFIG=${HOME}/.config/starship/starship.toml
eval "$(starship init zsh)"

# remove esc delay to make vi-mode usable
# KEYTIMEOUT=1

# "inspired" from https://unix.stackexchange.com/questions/389881/history-isnt-preserved-in-zsh
HISTFILE=${HOME}/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt INC_APPEND_HISTORY_TIME # write to history file immediately, but each session keeps their own history
setopt hist_ignore_all_dups # if a new command line being added to the history list duplicates an older one, the older command is removed from the list (even if it is not the previous event)
setopt hist_ignore_dups # do not enter events in history if they are duplicates of the previous event
setopt hist_find_no_dups # when searching for history entries in the line editor, do not display duplicates

setopt auto_cd # change to directory without cd
setopt cdable_vars # if the argument to cd is not a directory, and it is a variable that names a directory, then change to that directory

# load zoxide
eval "$(zoxide init zsh)"

# [ -f ${HOME}/.config/fzf/fzf.zsh ] && source ${HOME}/.config/fzf/fzf.zsh
source <(fzf --zsh)
bindkey "รง" fzf-cd-widget # make alt-c open fzf-cd-widget
source ${HOME}/.config/fzf/fzf-git.sh/fzf-git.sh

# load asdf
source /opt/homebrew/opt/asdf/libexec/asdf.sh
if [ -f "/Users/will.ernst/.config/fabric/fabric-bootstrap.inc" ]; then . "/Users/will.ernst/.config/fabric/fabric-bootstrap.inc"; fi
